# -*- mode: ruby -*-
Haconiwa.define do |config|
  config.name = "chroot-apache001" # to be hostname
  config.init_command = %w(/usr/local/apache2/bin/httpd -DFOREGROUND -X)
  # config.init_command = %w(/usr/local/bin/httpd-foreground)
  config.daemonize!
  config.command.set_stdout(file: "/tmp/container-internal.out")
  config.command.set_stderr(file: "/tmp/container-internal.err")

  root = Pathname.new("/var/lib/haconiwa-apache001")
  config.chroot_to root
  config.environ = {
    "PATH" => "#{ENV['PATH']}",
  }

  system "mkdir -p /tmp/criu/images"

  config.network.namespace = config.name
  config.network.container_ip = "10.0.0.2"

  config.checkpoint do |checkpoint|
    checkpoint.target_syscall :listen, 0
    checkpoint.images_dir    = "/tmp/criu/images"
    checkpoint.criu_log_file = "-"
    checkpoint.criu_service_address = "/var/run/criu_service.socket"
  end

  config.namespace.unshare "uts"
  config.namespace.unshare "ipc"
  config.namespace.unshare "pid"
  config.namespace.unshare "mount"

  config.mount_independent "procfs"
  config.mount_independent "devtmpfs"
  config.capabilities.reset_to_privileged!

  if File.exist? "/tmp/criu/images/core-1.img"
    Haconiwa::Logger.info "Going to run in restore mode"
    config.run_as_restore = true
  end
end
