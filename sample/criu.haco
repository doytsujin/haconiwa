# -*- mode: ruby -*-
Haconiwa.define do |conf|
  conf.daemonize!
  conf.define do |config|
    config.name = "chroot-apache001" # to be hostname
    config.init_command = %w(/usr/local/apache2/bin/httpd -DFOREGROUND -X)
    # config.init_command = %w(/usr/local/bin/httpd-foreground)
    config.command.set_stdout(file: "/tmp/container-internal.out")
    config.command.set_stderr(file: "/tmp/container-internal.err")

    root = Pathname.new("/var/lib/haconiwa-apache001")
    config.chroot_to root
    config.environ = {
      "PATH" => "#{ENV['PATH']}",
    }

    system "mkdir -p /tmp/criu/images"

    config.network.namespace = config.name
    config.network.container_ip = "10.0.0.2"

    config.checkpoint do |checkpoint|
      checkpoint.target_syscall :listen, 0
      checkpoint.images_dir    = "/tmp/criu/images"
      checkpoint.criu_log_file = ENV['CRIU_RESTORE_LOG_FILE'] || "-"
      checkpoint.criu_bin_path = ENV['MY_CRIU_BIN_PATH'] || `which criu`.chomp
      checkpoint.add_action_script "#{`pwd`.chomp}/sample/test_action.sh"
      checkpoint.criu_service_address = "/var/run/criu_service.socket"
    end

    config.namespace.unshare "uts"
    config.namespace.unshare "ipc"
    config.namespace.unshare "pid"
    config.namespace.unshare "mount"

    config.mount_independent "procfs"
    config.mount_independent "devtmpfs"
    config.capabilities.reset_to_privileged!

    config.add_general_hook :immediately_after_fork_on_parent do |base|
      cpid = base.pid
      $pid = Process.fork do
        system "timeout -s INT 2s strace -c -f -p #{cpid} > /tmp/strace.boot.#{$$}.log 2>&1"
      end
    end

    config.add_async_hook(sec: 10, interval_msec: 10 * 1000) do
      Haconiwa::Logger.puts "Hi! #{`date`}"
    end

    config.add_readiness_hook(port: 80, timeout: 10) do |base|
      Haconiwa::Logger.puts "Port 80 looks ready, yey!!! pid = #{base.pid}"
    end

    config.add_general_hook(:teardown_container) do |b|
      Process.waitpid $pid #rescue nil
      Haconiwa::Logger.puts "Exit! #{b.exit_status}"
    end
  end

  if File.exist? "/tmp/criu/images/core-1.img"
    Haconiwa::Logger.info "Going to run in restore mode"
    conf.run_as_restore = true
  end
end
